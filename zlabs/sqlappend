#!/bin/bash
function help {
      echo "Compares origin and destination branches and creates a sql script with all the scripts in the difference."
      echo " ? --help print this help"
#      echo " -o Output file. Default is $HOME/mls-queries/deployments-DESTINATION_BRANCH-`date +%Y%m%d`.sql"
      echo " -t Destination branch. Defaults to stage."
      echo " -f Origin branch. Defaults to development."
      echo " -p Project directory. Defaults to current directory."
}

WORKDIR=`pwd`
ORIGIN="development"
DESTINY="stage"

for ((i=1;i<=$#;i++));
do
  parameter=${!i}
  case $parameter in
    -o )
        ((i++))
        OUTPUT=${!i}
        ;;
    -t )
        ((i++))
        DESTINY=${!i}
        ;;
    -f )
        ((i++))
        ORIGIN=${!i}
        ;;
    -p ) 
        ((i++))
        WORKDIR=${!i}
        ;;
    [?] | --help )
      help
      exit 2
      ;;
    * )
      echo "Invalid argument: ${!i}"
      help
      exit 2
      ;;
  esac
done;

#Actual functionality 
if [ -z $WORKDIR ]; then
  echo "Not a valid directory"
  exit 1 
fi
if [ ! -d $WORKDIR ]; then
echo "Directory doesn't exist"
exit 1 
fi
if [ -z $OUTPUT ]; then
  OUTPUT="$HOME/mls-queries/deployments-$DESTINY-postgres-`date +%Y%m%d`.sql"
  OUTPUT_ORACLE="$HOME/mls-queries/deployments-$DESTINY-oracle-`date +%Y%m%d`.sql"
fi
cd $WORKDIR
git checkout $ORIGIN
git fetch origin
git pull
tmppp="tmppp"
tmpfile="/tmp/$tmppp"
mkfifo "$tmpfile"
echo  > "$tmppp"
git diff -z --name-only "origin/$DESTINY"  | grep -z  '.sql' | grep -z -v  'oracle'  | sort -z | xargs --null -r -n 1 -I {} bash -c "echo {} && echo >> $tmppp && echo >> $tmppp && echo '--'{} >> $tmppp && cat \"{}\" >> $tmppp && echo >> $tmppp && echo >> $tmppp"
echo "$OUTPUT"
cat -s < "$tmppp" > $OUTPUT
echo  > "$tmppp"
git diff -z --name-only "origin/$DESTINY"  | grep -z  '.sql' | grep -z 'oracle'  | sort -z | xargs --null -r -n 1 -I {} bash -c "echo {} && echo >> $tmppp && echo >> $tmppp && echo '--'{} >> $tmppp && cat \"{}\" >> $tmppp && echo >> $tmppp && echo >> $tmppp"
echo "$OUTPUT"
cat -s < "$tmppp" > $OUTPUT_ORACLE
rm "$tmpfile"
rm "$tmppp"
exit 0
